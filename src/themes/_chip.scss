// Button variants
@use 'sass:map';
@use 'sass:meta';
@use '@angular/material' as mat;

// Applies a property to an mat-button element for each of the supported palettes.
@mixin _theme-property($theme, $property, $hue, $variants) {
	$background: map.get($theme, background);
	$foreground: map.get($theme, foreground);

	@each $variant, $variant-palette in $variants {
		&.mat-#{$variant} {
			$color: mat.m2-get-color-from-palette($variant-palette, $hue);

			@if $property == 'color' {
				--mdc-chip-disabled-label-text-color: white;
				--mdc-chip-elevated-container-color: #{$color};
				--mdc-chip-elevated-disabled-container-color: #{$color};
				--mdc-chip-focus-state-layer-color: black;
				--mdc-chip-focus-state-layer-opacity: 0.12;
				--mdc-chip-label-text-color: white;
				--mdc-chip-with-icon-icon-color: white;
				--mdc-chip-with-icon-disabled-icon-color: white;
				--mdc-chip-with-icon-selected-icon-color: white;
				--mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;
				--mdc-chip-with-trailing-icon-trailing-icon-color: white;
			} @else {
			}
		}
	}
}

@mixin color($config-or-theme, $variants) {
	$config: mat.m2-get-color-config($config-or-theme);
	$foreground: map.get($config, foreground);
	$background: map.get($config, background);
	.mat-mdc-standard-chip.mat-mdc-chip-selected,
	.mat-mdc-standard-chip.mat-mdc-chip-highlighted {
		@include _theme-property($config, 'color', text, $variants);
	}
}
